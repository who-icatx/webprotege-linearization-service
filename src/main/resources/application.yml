spring:
  application:
    name: webprotege-linearization-service
  rabbitmq:
    host: rabbitmq
    port: 5672
    password: guest
    username: guest
  data:
    mongodb:
      host: mongo
      port: 27017
      database: webprotege
      auto-index-creation: true
      uri: mongodb://${spring.data.mongodb.host}:${spring.data.mongodb.port}/${spring.data.mongodb.database}

webprotege:
  minio:
    access-key: webprotege
    end-point: http://minio:9000  # Folosește numele containerului în loc de localhost
    secret-key: webprotege
    bucket-name: webprotege-uploads
    revision-history-documents-bucket-name: webprotege-revision-history-documents
    connection-timeout: 60000      # 1 minut pentru conexiune
    read-timeout: 600000          # 10 minute pentru citire
    write-timeout: 600000         # 10 minute pentru scriere
    max-retries: 5                # Mai multe încercări
    retry-delay-ms: 2000          # 2 secunde între retry-uri
  rabbitmq:
    requestqueue: webprotege-linearization-service-queue
    responsequeue: webprotege-linearization-service-response-queue
    eventsqueue: webprotege-linearization-events-queue
    event-subscribe: true
    timeout: 60000
  linearization:
    batch-size: 100
  readWriteLock:
    timeoutInMillies: 1000
    maxRetries: 5
